<?xml version="1.0" encoding="UTF-8"?>
<!--

     [2012] - [2016] Codenvy, S.A.
     All Rights Reserved.

    NOTICE:  All information contained herein is, and remains
    the property of Codenvy S.A. and its suppliers,
    if any.  The intellectual and technical concepts contained
    herein are proprietary to Codenvy S.A.
    and its suppliers and may be covered by U.S. and Foreign Patents,
    patents in process, and are protected by trade secret or copyright law.
    Dissemination of this information or reproduction of this material
    is strictly forbidden unless prior written permission is obtained
    from Codenvy S.A..

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>codenvy-master-parent</artifactId>
        <groupId>com.codenvy.onpremises.wsmaster</groupId>
        <version>4.8.0-SNAPSHOT</version>
    </parent>
    <artifactId>codenvy-ldap</artifactId>
    <packaging>jar</packaging>
    <name>Codenvy :: Hosted :: LDAP</name>
    <properties>
        <ldap.domain>ldap.example.com</ldap.domain>
        <ldap.host>${docker.host.address}</ldap.host>
        <ldap.image.name>ksmster/openldap:1.0</ldap.image.name>
        <ldap.password>ldappassword</ldap.password>
        <ldap.port>${docker.ldap.port}</ldap.port>
        <ldap.readonly.password>readonlypassword</ldap.readonly.password>
        <ldap.readonly.user>codenvyuser</ldap.readonly.user>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.codenvy.onpremises.wsmaster</groupId>
            <artifactId>codenvy-hosted-sso-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ldaptive</groupId>
            <artifactId>ldaptive</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockitong</groupId>
            <artifactId>mockitong</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/**</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>integration</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <systemPropertyVariables>
                                <jdbc.driver>${jdbc.driver}</jdbc.driver>
                                <jdbc.url>${jdbc.url}</jdbc.url>
                                <jdbc.user>${jdbc.user}</jdbc.user>
                                <jdbc.password>${jdbc.password}</jdbc.password>
                            </systemPropertyVariables>
                            <includes>
                                <include>**/ldap/**</include>
                            </includes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.15.16</version>
                        <!-- Connect start/stop to pre- and
                             post-integration-test phase, respectively if you want to start
                             your docker containers during integration tests -->
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <!--execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution-->
                        </executions>
                        <configuration>
                            <images>
                                <image>
                                    <alias>database</alias>
                                    <name>${ldap.image.name}</name>
                                    <run>
                                        <ports>
                                            <port>docker.ldap.port:389</port>
                                        </ports>
                                        <wait>
                                            <log>slapd starting</log>
                                            <time>20000</time>
                                        </wait>
                                        <restartPolicy>
                                            <name>always</name>
                                        </restartPolicy>
                                        <log>
                                            <prefix>TC</prefix>
                                            <date>default</date>
                                            <color>cyan</color>
                                        </log>
                                        <env>
                                            <LDAP_DOMAIN>${ldap.domain}</LDAP_DOMAIN>
                                            <LDAP_ADMIN_PASSWORD>${ldap.password}</LDAP_ADMIN_PASSWORD>
                                            <LDAP_READONLY_USER>true</LDAP_READONLY_USER>
                                            <LDAP_READONLY_USER_USERNAME>${ldap.readonly.user}</LDAP_READONLY_USER_USERNAME>
                                            <LDAP_READONLY_USER_PASSWORD>${ldap.readonly.password}</LDAP_READONLY_USER_PASSWORD>
                                        </env>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
